
/**
 * 
 * Given a string, return all strings that can be generated by changing case of one or more letters in it.
 * 
 * Input: "a2b"
 * Output: ["A2B", "A2b", "a2B", "a2b"]
 * 
 * TC: O(n * 2^n), where n = length of the string. In the above example input is "a2b" so length n is 3.
 * SC: O(n * 2^n)
 * 
 * 
 * @param {str} s
 * @return {list_str}
 */
function letter_case_permutations(s) {
    let result = [];
    
    function helper(slate, i) {
        if(i === s.length) {
            result.push(slate);
            return;
        }
        
        if(isNaN(s[i])) {
            // i is string
            helper(`${slate}${s[i].toLowerCase()}`, i+1)
            helper(`${slate}${s[i].toUpperCase()}`, i+1)
        } else {
            // i is number
            helper(`${slate}${s[i]}`, i+1);
        }
    }
    
    helper("", 0);
    
    return result;
}
